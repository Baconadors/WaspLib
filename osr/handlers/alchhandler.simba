{$DEFINE SRL_DISABLE_REMOTEINPUT}
{$DEFINE WL_ALCH_HANDLER_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type RSAlchHandler = record(TSRLBaseRecord) class var
  ItemArray: TRSItemArray;
end;

{$IFHASFILE Data/WaspLib/configs/alch_handler.simba}
  {$I Data/WaspLib/configs/alch_handler.simba}
{$ENDIF}

procedure RSAlchHandler.Setup(); static;
var
  settings: TStringArray;
  str: String;
  i: Int32;
begin
  if RSAlchHandler.ItemArray = [] then
  begin
    RSAlchHandler.ItemArray := [
      'abyssal bracelet(5)',
      'adamant platebody',
      'air battlestaff',
      'amulet of glory',
      'amulet of glory(4)',
      'black d''hide body',
      'black d''hide chaps',
      'black d''hide shield',
      'black d''hide vambraces',
      'blue d''hide body',
      'blue d''hide chaps',
      'blue d''hide shield',
      'blue d''hide vambraces',
      'combat bracelet',
      'combat bracelet(4)',
      'diamond bracelet',
      'dragon axe',
      'dragon battleaxe',
      'dragon cane',
      'dragon chainbody',
      'dragon dagger',
      'dragon dagger(p+)',
      'dragon halberd',
      'dragon hasta',
      'dragon longsword',
      'dragon mace',
      'dragon med helm',
      'dragon platelegs',
      'dragon plateskirt',
      'dragon scimitar',
      'dragon spear',
      'dragon sq shield',
      'dragon sword',
      'dragonstone ring',
      'earth battlestaff',
      'fire battlestaff',
      'green d''hide body',
      'green d''hide chaps',
      'green d''hide shield',
      'green d''hide vambraces',
      'lava battlestaff',
      'magic longbow',
      'mithril platebody',
      'mud battlestaff',
      'mystic air staff',
      'mystic boots',
      'mystic boots (dark)',
      'mystic boots (light)',
      'mystic earth staff',
      'mystic fire staff',
      'mystic gloves',
      'mystic gloves (dark)',
      'mystic gloves (light)',
      'mystic hat',
      'mystic hat (dark)',
      'mystic hat (light)',
      'mystic lava staff',
      'mystic mud staff',
      'mystic robe bottom',
      'mystic robe bottom (dark)',
      'mystic robe bottom (light)',
      'mystic robe top',
      'mystic robe top (dark)',
      'mystic robe top (light)',
      'mystic water staff',
      'noted abyssal bracelet(5)',
      'noted adamant platebody',
      'noted air battlestaff',
      'noted amulet of glory',
      'noted amulet of glory(4)',
      'noted black d''hide body',
      'noted black d''hide chaps',
      'noted black d''hide shield',
      'noted black d''hide vambraces',
      'noted blue d''hide body',
      'noted blue d''hide chaps',
      'noted blue d''hide shield',
      'noted blue d''hide vambraces',
      'noted combat bracelet',
      'noted combat bracelet(4)',
      'noted diamond bracelet',
      'noted dragon axe',
      'noted dragon battleaxe',
      'noted dragon cane',
      'noted dragon chainbody',
      'noted dragon dagger',
      'noted dragon dagger(p+)',
      'noted dragon halberd',
      'noted dragon hasta',
      'noted dragon longsword',
      'noted dragon mace',
      'noted dragon med helm',
      'noted dragon platelegs',
      'noted dragon plateskirt',
      'noted dragon scimitar',
      'noted dragon spear',
      'noted dragon sq shield',
      'noted dragon sword',
      'noted dragonstone ring',
      'noted earth battlestaff',
      'noted fire battlestaff',
      'noted green d''hide body',
      'noted green d''hide chaps',
      'noted green d''hide shield',
      'noted green d''hide vambraces',
      'noted lava battlestaff',
      'noted magic longbow',
      'noted magic longbow (u)',
      'noted magic shortbow (u)',
      'noted maple longbow (u)',
      'noted maple shortbow (u)',
      'noted mithril platebody',
      'noted mud battlestaff',
      'noted mystic air staff',
      'noted mystic boots',
      'noted mystic boots (dark)',
      'noted mystic boots (light)',
      'noted mystic earth staff',
      'noted mystic fire staff',
      'noted mystic gloves',
      'noted mystic gloves (dark)',
      'noted mystic gloves (light)',
      'noted mystic hat',
      'noted mystic hat (dark)',
      'noted mystic hat (light)',
      'noted mystic lava staff',
      'noted mystic mud staff',
      'noted mystic robe bottom',
      'noted mystic robe bottom (dark)',
      'noted mystic robe bottom (light)',
      'noted mystic robe top',
      'noted mystic robe top (dark)',
      'noted mystic robe top (light)',
      'noted mystic water staff',
      'noted red d''hide body',
      'noted red d''hide chaps',
      'noted red d''hide shield',
      'noted red d''hide vambraces',
      'noted ring of wealth',
      'noted ring of wealth (4)',
      'noted rune 2h sword',
      'noted rune axe',
      'noted rune battleaxe',
      'noted rune boots',
      'noted rune cane',
      'noted rune chainbody',
      'noted rune claws',
      'noted rune crossbow',
      'noted rune dagger',
      'noted rune dagger(p+)',
      'noted rune full helm',
      'noted rune halberd',
      'noted rune hasta',
      'noted rune kiteshield',
      'noted rune longsword',
      'noted rune mace',
      'noted rune med helm',
      'noted rune pickaxe',
      'noted rune platebody',
      'noted rune platelegs',
      'noted rune plateskirt',
      'noted rune scimitar',
      'noted rune spear',
      'noted rune sq shield',
      'noted rune sword',
      'noted rune warhammer',
      'noted runite crossbow (u)',
      'noted runite limbs',
      'noted skills necklace',
      'noted skills necklace(4)',
      'noted steel platebody',
      'noted water battlestaff',
      'noted yew longbow',
      'noted yew longbow (u)',
      'noted yew shortbow (u)',
      'onyx bolts (e)',
      'red d''hide body',
      'red d''hide chaps',
      'red d''hide shield',
      'red d''hide vambraces',
      'ring of wealth',
      'ring of wealth (4)',
      'rune 2h sword',
      'rune axe',
      'rune battleaxe',
      'rune boots',
      'rune cane',
      'rune chainbody',
      'rune claws',
      'rune crossbow',
      'rune dagger',
      'rune dagger(p+)',
      'rune full helm',
      'rune halberd',
      'rune hasta',
      'rune kiteshield',
      'rune longsword',
      'rune mace',
      'rune med helm',
      'rune pickaxe',
      'rune platebody',
      'rune platelegs',
      'rune plateskirt',
      'rune scimitar',
      'rune spear',
      'rune sq shield',
      'rune sword',
      'rune warhammer',
      'runite crossbow (u)',
      'runite limbs',
      'skills necklace',
      'skills necklace(4)',
      'steel platebody',
      'water battlestaff',
      'yew longbow'
    ];

    settings += 'RSAlchHandler.ItemArray := [';
    for i := 0 to High(RSAlchHandler.ItemArray) do
    begin
      str := "    '" + ToString(RSAlchHandler.ItemArray[i]).Replace("'", "''") + "'";
      if i < High(RSAlchHandler.ItemArray) then
        str += ',';
      settings += str;
    end;
    settings += '];';
    WriteConfigFile('alch_handler', settings);
  end;
end;

begin
  RSAlchHandler.Setup();
end;

function TScriptForm.CreateAlchemyPanel(): TTabSheet;
  type TScriptForm = TScriptForm;
  procedure TScriptForm._AddAlchList({$H-}sender: TObject);{$H+}
  var
    itemList, alchList: TListBox;
    i: Int32;
    str, tmp: String;
    settings: TStringArray;
  begin
    itemList := TScriptForm.Form.GetChild('item_list_listbox');
    alchList := TScriptForm.Form.GetChild('alch_list_listbox');

    i := itemList.getItemIndex();
    if i = -1 then
      Exit;

    str := itemList.GetSelectedText();
    itemList.GetItems().Delete(i);
    if i > itemList.getCount()-1 then
      itemList.setItemIndex(itemList.getCount()-1)
    else
      itemList.setItemIndex(i);

    for i := 0 to alchList.getCount() do
    begin
      if i < alchList.getCount() -1 then
      begin
        tmp := alchList.GetItems().getStrings(i);

        if str > tmp then
          Continue;

        alchList.getItems().Insert(i, str);
        Break;
      end
      else
        alchList.getItems().Add(str);
    end;

    RSAlchHandler.ItemArray := [];
    settings += 'RSAlchHandler.ItemArray := [';
    for i := 0 to alchList.getCount()-1 do
    begin
      RSAlchHandler.ItemArray += alchList.getItems().getStrings(i);
      str := "    '" + ToString(RSAlchHandler.ItemArray[i]).Replace("'", "''") + "'";
      if i < alchList.getCount()-1 then
        str += ',';
      settings += str;
    end;
    settings += '];';
    WriteConfigFile('alch_handler', settings);
  end;

  procedure TScriptForm._RemoveAlchList({$H-}sender: TObject);{$H+}
  var
    itemList, alchList: TListBox;
    i: Int32;
    str, tmp: String;
    settings: TStringArray;
  begin
    itemList := TScriptForm.Form.GetChild('item_list_listbox');
    alchList := TScriptForm.Form.GetChild('alch_list_listbox');

    i := alchList.getItemIndex();
    if i = -1 then
      Exit;

    str := alchList.GetSelectedText();
    alchList.GetItems().Delete(i);
    if i > alchList.getCount()-1 then
      alchList.setItemIndex(alchList.getCount()-1)
    else
      alchList.setItemIndex(i);

    for i := 0 to itemList.getCount() do
    begin
      if i < itemList.getCount() -1 then
      begin
        tmp := itemList.GetItems().getStrings(i);

        if str > tmp then
          Continue;

        itemList.getItems().Insert(i, str);
        Break;
      end
      else
        itemList.getItems().Add(str);
    end;

    RSAlchHandler.ItemArray := [];
    settings += 'RSAlchHandler.ItemArray := [';
    for i := 0 to alchList.getCount()-1 do
    begin
      RSAlchHandler.ItemArray += alchList.getItems().getStrings(i);
      str := "    '" + ToString(RSAlchHandler.ItemArray[i]).Replace("'", "''") + "'";
      if i < alchList.getCount()-1 then
        str += ',';
      settings += str;
    end;
    settings += '];';
    WriteConfigFile('alch_handler', settings);
  end;

  procedure TScriptForm._OnItemListSelected({$H-}sender: TObject);{$H+}
  var
    btn: TButton;
  begin
    btn := TScriptForm.Form.GetChild('add_alchlist_button');
    btn.setEnabled(True);
  end;

  procedure TScriptForm._OnAlchListSelected({$H-}sender: TObject);{$H+}
  var
    btn: TButton;
  begin
    btn := TScriptForm.Form.GetChild('remove_alchlist_button');
    btn.setEnabled(True);
  end;

var
  itemList, alchList: TLabeledListBox;
  itemNames: TStringList;
  fullWidth, space, y, i: Int32;
  str:String;
  addAlchList, removeAlchList: TButton;
begin
  Self.AddTab('Alchemy Settings');
  Result := Self.Tabs[High(Self.Tabs)];

  fullWidth := Floor(Self.Size.X/3);
  space := Floor(fullWidth * 0.1);
  y := Floor(Self.Size.Y/10);

  with itemList do
  begin
    Create(Result);
    SetCaption('Item list: ');
    SetName('item_list');
    SetLeft(space);
    SetTop(y);
    SetWidth(fullWidth);
    SetHeight(Floor(Self.Size.Y/1.5));
    itemNames.Init();
    itemNames.LoadFromFile(ITEM_FINDER_ITEM_NAMES_FILE);
    itemNames.setSorted(True);

    for i := 0 to itemNames.getCount()-1 do
    begin
      if str = itemNames.getStrings(i).Before('=') then
        Continue;
      str := itemNames.getStrings(i).Before('=');
      if not RSAlchHandler.ItemArray.Contains(str) then
        AddItem(str);
    end;
    itemNames.Free();
    ListBox.setOnClick(@Self._OnItemListSelected);
  end;

  with alchList do
  begin
    Create(Result);
    SetCaption('Alch list: ');
    SetName('alch_list');
    SetLeft(Self.Size.X - space - fullWidth);
    SetTop(itemList.GetTop());
    SetWidth(itemList.GetWidth());
    SetHeight(itemList.GetHeight());

    for i := 0 to High(RSAlchHandler.ItemArray) do
      AddItem(RSAlchHandler.ItemArray[i]);
    ListBox.setOnClick(@Self._OnAlchListSelected);
  end;

  with addAlchList do
  begin
    Create(Result);
    setCaption('Add Alch List >>>');
    SetName('add_alchlist_button');
    SetLeft(itemList.GetRight() + space);
    SetTop(y*2);
    setWidth(space*6);
    SetHeight(TControl.AdjustToDPI(30));
    setOnClick(@Self._AddAlchList);
    setEnabled(False);
  end;

  with removeAlchList do
  begin
    Create(Result);
    setCaption('<<< Remove Alch List');
    SetName('remove_alchlist_button');
    SetLeft(itemList.GetRight() + space);
    SetTop(y*4);
    setWidth(space*6);
    SetHeight(TControl.AdjustToDPI(30));
    setOnClick(@Self._RemoveAlchList);
    setEnabled(False);
  end;
end;

