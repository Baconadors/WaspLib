(*
# RSClient
Extensions to TRSClient.

One thing to keep in mind is that WaspLib enforces the use of Remote Input by default.

To disable it you have to use either of this snippets in your scripts:

```pascal
{$DEFINE SRL_DISABLE_REMOTEINPUT}
//or
begin
WLSettings.RemoteInput.Enabled := False;
end;
*)
{$DEFINE WL_RSCLIENT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

function TWaspLib.CountScriptThreads(): Int32; static;
var
  windows, simbas: TOSWindowArray;
  win: TOSWindow;
  pids: TIntegerArray;
begin
  windows := GetWindows();
  simbas := windows.GetByTitleAndClass('Output,File Browser,Editor,Function List', 'Window');
  windows := windows.GetByTitleAndClass('Simba', 'Window');

  for win in windows do
  begin
    if win.GetChildren(True) <> [] then
      Continue;
    if win.GetBounds() <> [0,0,0,0] then
      Continue;

    pids += win.GetPID();
  end;

  pids.ClearDuplicates();
  Result := Length(pids) - Length(simbas) + 1;
end;

procedure TWaspLib.CheckScriptThreads(); static;
var
  threads: Int32;
begin
  threads := TWaspLib.CountScriptThreads();

  {%codetools off}
  if threads >= %0111 then
  {%codetools on}
    TerminateScript(
      'You seem to be running ' + ToStr(threads) + ' simba scripts.' +
      LineEnding + 'The maximum allowed are 7 instances.' +
      LineEnding + 'WaspLib is not meant for gold farming.'
    );

end;


procedure TRSClient.Setup(); override;
begin
  Self.Name := 'RSClient';

  TWaspLib.CheckScriptThreads();

  {$IFNDEF SRL_DISABLE_REMOTEINPUT}
    {$IFNDEF SCRIPT_GUI}
      Self.RemoteInput.Setup();
    {$ENDIF}
  {$ENDIF}

  Self.Mode := Self.DetectClientMode();
  if Self.Mode = ERSClientMode.UNKNOWN then
    Self.Mode := ERSClientMode.FIXED; // Fixed as default so we can login if needed

  Self.ClientModeChanged();
end;

function TRSOptions.HideRoofs(): Boolean;
begin
  //overriden later in options file.
  Result := True;
end;

procedure TRSClient.CheckClientSettings();
var
  userB, expB: TBox;
begin
  if not WL.GameSettings.HighestPitch then
  begin
    WL.GameSettings.HighestPitch := True;
    MainScreen.SetHighestPitch();
  end;

  if not WL.GameSettings.MaxBrightness then
  begin
    WL.GameSettings.MaxBrightness := Options.SetMaxBrightness();

    if (MM2MS.ZoomLevel = -1) and Options.IsOpen() and (Options.GetCurrentTab() = ERSOptionsTab.DISPLAY) then
      MM2MS.ZoomLevel := Options.GetZoomLevel();
  end;

  if not WL.GameSettings.RoofsHidden then
    WL.GameSettings.RoofsHidden := Options.HideRoofs();

  if WL.XP.Previous = 0 then
    XPBar.Read();

  if WLSettings.SaveVideo.Enabled and not WL.IsRecording then
  begin
    userB := Chat.GetDisplayNameBox();
    if userB = Chat.GetLineBoxes()[CHAT_INPUT_LINE] then
      userB := [];

    expB := XPBar.Bounds();

    Recorder.Start(WLSettings.SaveVideo.Time, WL_DATAPATH + 'videos', userB, expB);
  end;
end;

function TRSClient.IsLoggedIn(): Boolean; override;
begin
  Result := inherited;

  if Result then
    Self.CheckClientSettings();
end;

procedure TRSClient.UpdateState();
begin
  Self.DetectClientMode(True);
  Self.ClientModeChanged();
end;
