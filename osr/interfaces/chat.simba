{$DEFINE WL_CHAT_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

function TRSChat.HasContinue(): Boolean;
begin
  Result := Self.FindOption('Click here to continue', [CHAT_COLOR_BLUE, CHAT_COLOR_WHITE]) or
            Self.FindOption('Please wait', [CHAT_COLOR_BLUE, CHAT_COLOR_WHITE]);
end;

(*
Chat.LeveledUp
~~~~~~~~~~~~~~
.. pascal:: function TRSChat.LeveledUp(): Boolean; override;

Overriden to take a screenshot of the chatbox when we leveled up.

*)
function TRSChat.LeveledUp(): Boolean; override;
begin
  Result := inherited;

  if Result then
    SaveScreenshot('level_up' + DIRECTORYSEPARATOR + 'levelup', Chat.Bounds());
end;


function TRSChat.HandleLevelUp(chance: Double = BioHash): Boolean;
var
  useKeyboard: Boolean;
begin
  if chance = BioHash then
    useKeyboard := Antiban.BioDice(EBioBehavior.KEYBOARD_CHAT_CHANCE)
  else
    useKeyboard := SRL.Dice(chance);

  repeat
    Self.ClickContinue(useKeyboard);
    Wait(60, 3000, wdLeft);
    Result := Chat.GetDisplayName() <> '';
  until Result;
end;

function TRSChat.FindQuery(query: String): Boolean; overload;
begin
  Result := query in Self.GetQuery();
end;


function TRSChat.GetScrollArea({$H-}scrollBar: TRSScrollBar): TBox;{$H+} override;
begin
  Result := Self.Bounds();
end;

function TRSChat.RandomScroll(down: Boolean = True): Boolean; override;
var
  scrollBar: TRSScrollBar;
  i, times: Int32;
begin
  scrollBar := Self.GetScrollBar();

  if not scrollBar.IsVisible() or not Self.CanScroll() then
    Exit;

  Result := True;

  if down and (scrollBar.Position = 100) then
    Exit
  else if not down and (scrollBar.Position = 0) then
    Exit;

  times := Round(Antiban.GetUniqueNumber(5, 3, 8));

  if down then
  begin
    for i := 1 to times do
      Mouse.Scroll(Self.GetScrollArea(scrollBar), Random(1, 3), True);
    Exit;
  end;

  for i := 1 to times do
    Mouse.Scroll(Self.GetScrollArea(scrollBar), Random(1, 3), False);
end;
