{$DEFINE RELD_BALLOON_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

type
  ERSBalloonButton = (GRAND_TREE_BALLOON, CASTLE_WARS_BALLOON, ENTRANA_BALLOON,
                      TAVERLEY_BALLOON, CRAFTING_GUILD_BALLOON, VARROCK_BALLOON,
                       CLOSE_BALLOON);

  TRSBalloonTransport = type TRSInterface;

procedure TRSBalloonTransport.Setup(); override;
begin
  inherited;
  ButtonColors := [CTS1(8564948, 0)];
end;

procedure TRSBalloonTransport.SetupAlignment(mode: ERSClientMode); override;
begin
  inherited;

  Self.Alignment.Left := [@InterfaceArea.X1];
  Self.Alignment.Right := [@InterfaceArea.X2];
  Self.Alignment.Top := [@InterfaceArea.Y1];
  Self.Alignment.Bottom := [@InterfaceArea.Y2];
  Self.Alignment.Center.MaxWidth := 512;
  Self.Alignment.Center.MaxHeight := 334;
end;

function TRSBalloonTransport.GetButtons(): TRSButtonArray;
var
  grandTree, castleWars, entrana, taverley, craftingGuild, varrock, close:TRSButton;
  B : TBox;
begin

  B := Box(Self.Bounds.X1 + 52, Self.Bounds.Y1 + 130, Self.Bounds.X2 - 385, Self.Bounds.Y2 - 162);

  grandTree.EnabledColors := Self.ButtonEnabledColors;
  grandTree.Index := 0;
  grandTree.Bounds := B;
  grandTree.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 62, Self.Bounds.Y1 + 235, Self.Bounds.X2 - 365, Self.Bounds.Y2 - 55);

  castleWars.EnabledColors := Self.ButtonEnabledColors;
  castleWars.Index := 0;
  castleWars.Bounds := B;
  castleWars.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 198, Self.Bounds.Y1 + 122, Self.Bounds.X2 - 240, Self.Bounds.Y2 - 185);

  entrana.EnabledColors := Self.ButtonEnabledColors;
  entrana.Index := 0;
  entrana.Bounds := B;
  entrana.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 265, Self.Bounds.Y1 + 58, Self.Bounds.X2 - 167, Self.Bounds.Y2 - 250);

  taverley.EnabledColors := Self.ButtonEnabledColors;
  taverley.Index := 0;
  taverley.Bounds := B;
  taverley.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 290, Self.Bounds.Y1 + 138, Self.Bounds.X2 - 140, Self.Bounds.Y2 - 155);

  craftingGuild.EnabledColors := Self.ButtonEnabledColors;
  craftingGuild.Index := 0;
  craftingGuild.Bounds := B;
  craftingGuild.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 358, Self.Bounds.Y1 + 32, Self.Bounds.X2 - 80, Self.Bounds.Y2 - 280);

  varrock.EnabledColors := Self.ButtonEnabledColors;
  varrock.Index := 0;
  varrock.Bounds := B;
  varrock.Middle := B.Middle();

  B := Box(Self.Bounds.X1 + 481, Self.Bounds.Y1 + 10, Self.Bounds.X2 - 8, Self.Bounds.Y2 - 303);

  close.EnabledColors := Self.ButtonEnabledColors;
  close.Index := 0;
  close.Bounds := B;
  close.Middle := B.Middle();

  Result := [grandTree, castleWars, entrana, taverley, craftingGuild, varrock, close];
end;

function TRSBalloonTransport.GetButton(button: ERSBalloonButton): TRSButton;
var
  buttons: TRSButtonArray;
begin
  buttons := Self.GetButtons();

  if buttons <> [] then
    Result := buttons[button];
end;

function TRSBalloonTransport.IsOpen(): Boolean;
begin
  Result := SRL.CountColor(Self.ButtonColors[0], Self.Bounds()) > 2000;
end;

function TRSBalloonTransport.IsOpen(waitTime: Int32): Boolean; overload;
begin
  Result := WaitUntil(Self.IsOpen(), SRL.TruncatedGauss(50, 1500), waitTime);
end;

function TRSBalloonTransport.ClickCloseButton(pressEscape: Boolean = False): Boolean;
begin
  if pressEscape then
  begin
    Keyboard.PressKey(VK_ESCAPE);
    Result := True;
  end
  else
    Result := Self.GetButton(CLOSE_BALLOON).Click();
end;

function TRSBalloonTransport.Close(pressEscape: Boolean = False): Boolean;
begin
  if not Self.IsOpen() then
    Exit(True);

  Result := Self.ClickCloseButton(pressEscape) and WaitUntil(not Self.IsOpen(), SRL.TruncatedGauss(50, 1500), Random(1500, 2000));
end;

var
 BalloonTransport : TRSBalloonTransport;

procedure TRSClient.ClientModeChanged(); override;
begin
  inherited;

  BalloonTransport.SetupAlignment(Self.Mode);
end;

procedure TSRL.Setup(); override;
begin
  inherited;

  BalloonTransport.Setup();
end;
