(*
# XPBar
Extensions to SRL's {ref}`XPBar`
*)

{$DEFINE WL_XPBAR_INCLUDED}
{$IFNDEF WL_OSR}
  {$I WaspLib/osr.simba}
{$ENDIF}

function TRSXPBar.Read(): Int32; override;
var
  i: Int32;
begin
  if not Self.IsSetup then
    Self._Setup();

  if not Self.IsSetup or not Self.Enable() then
    Exit;

  Result := OCR.RecognizeNumber(Self.Bounds(), TOCRColorFilter.Create([$FFFFFF]), Self.Font);

  Self.Tracker.IsSetup := (Result > 0) and (Result >= Self.Tracker.Current);

  if not Self.Tracker.IsSetup and (Self.Tracker.Current = 0) and MainScreen.HasInterface() then
    if MainScreen.CloseInterface() then
    begin
      Self.IsSetup := False;
      Exit(Self.Read());
    end;

  if Self.Tracker.IsSetup then
  begin
    if Self.Tracker.Start = 0 then
      Self.Tracker.Start := Result;

    if (Self.Tracker.Current = 0) or (Result > Self.Tracker.Current) then
      Self.Tracker.Current := Result;

    Exit;
  end;

  if not WL.GameSettings.XPBarIsSetup and not MainScreen.HasInterface() then
  begin
    Mouse.Click(Minimap.GetXPCircle(), MOUSE_LEFT);

    repeat
      Wait(50, 250, wdLeft);
      case i of
        0..7: ;
        8..10: WriteLn 'Stuck in TRSXPBar.Read()';
        else TerminateScript('Couldn''t toggle the XPBar.');
      end;
      Inc(i);
    until Self.Enable();

    Result := OCR.RecognizeNumber(Self.Bounds(), TOCRColorFilter.Create([$FFFFFF]), Self.Font);
    Self.Tracker.IsSetup := (Result > 0) and (Result >= Self.Tracker.Current);

    if not Self.Tracker.IsSetup then
      XPBarSetup.Fix();
  end;
end;

function TRSXPBar.EarnedXP(): Boolean; override;
var
  previous: Int32;
begin
  previous := Self.Tracker.Current;
  Result := Self.Read() > previous;

  if Result and Self.Tracker.IsSetup then
  begin
    APIClient.UpdatePayload(Self.Tracker.Current-previous, 0, 0);
    WL.Activity.Restart();
  end;
end;
